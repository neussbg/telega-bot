
const TelegramApi = require('node-telegram-bot-api')

const token = '6195145742:AAGGoBeUgpL2fduG80SOIJeLgik7j1p0d3w';

const agrement = 0.43;

const bot = new TelegramApi(token, {polling: true});

const currentProfile = '@TakePoizonM'

let currentAmount = 0;

let currentValue = 0

let isWaitForMessage = false;

let priceDict = {}

async function setCurs(amount){
    const TRIVIA_URL = `https://api.api-ninjas.com/v1/convertcurrency?have=CNY&want=RUB&amount=${amount}`
    const moneyApiKey = 'mTwFDgRcNAI1/viXi0ux2w==uIrx0nBLjvxZ39ZX'
  return  fetch(TRIVIA_URL, {
      method: 'GET',
      headers: {
          'X-API-KEY': moneyApiKey,
          'Accept': 'application/json',
          'Content-Type': 'application/json'
      },
    })
    .then(response => response.json()).then((resp)=> (Number(resp.new_amount + agrement).toFixed(2)))
    .catch(error => console.error(error)); 
}

async function setMenuBtns(bot, chatId, msg){
    return await  bot.sendMessage(chatId, `${msg}`, {
                    reply_markup:{
                        keyboard:[
                            [ {text:'üí¥ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å'}],
                            [
                                {
                                    text: 'üéØ–û—Ç–∑—ã–≤—ã'
                                },
                                {
                                    text: '‚ùóÔ∏è–ê–∫—Ü–∏–∏‚ùóÔ∏è'
                                },
                            ],
                            [
                                {
                                    text: 'üöö–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å?'
                                },
                                {
                                    text: '‚ùî–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã'
                                },
                            ],
                            [
                                {
                                    text: 'üì≤–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å'
                                },
                                {
                                    text: 'üî°–ê–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ç–æ–≤–∞—Ä–∞—Ö'
                                },
                            
                            ],
                        ],
                        resize_keyboard: true,
                    },
                })
};


async function setMenuClothesBtns(chatId, bot, msg){
    for(let i = 1; i <= 4; i++){
        priceDict[i] = false
    }
    return await  bot.sendMessage(chatId, `${msg}`, {
                    reply_markup:{
                        keyboard:[
                            [
                                {
                                    text: 'üëü–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞'
                                },
                                {
                                    text: 'üëñ–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã'
                                },
                            ],
                            [
                                {
                                    text: 'üëï–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã'
                                },
                                {
                                    text: 'üß¶–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ'
                                },
                            ],
                            [
                                {
                                    text: '‚ôªÔ∏è–ú–µ–Ω—é'
                                },
                            ],
                        ],
                        resize_keyboard: true,
                    },
                })
};

 function setCurrenClothesBth(chatId, bot, msg){
    for(let i = 1; i <= 4; i++){
        priceDict[i] = false
    }
    return  bot.sendMessage(chatId, `${msg}`, {
        reply_markup:{
            inline_keyboard: [
        [
                {
                text: 'üì≤–ú–µ–Ω–µ–¥–∂–µ—Ä',
                url: 'https://t.me/TakePoizonM'
            },
        ],
        [
            {
                text: '‚ôªÔ∏è–ú–µ–Ω—é',
                callback_data: 'menus'
            },

            {
                text: 'üí¥ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å',
                callback_data: 'prices'
            }, 
        ]
        ],
            resize_keyboard: true,
        },
                })
};

async function getBackupMenu(chatId, bot, msg){
    return await bot.sendMessage(chatId, `${msg}`, {
                        reply_markup:{
                            keyboard:[
                                ['‚ôªÔ∏è–ú–µ–Ω—é']],
                            resize_keyboard: true,
                            
                        },
                        parse_mode: 'HTML'
                    })
};

async function callbackQuery(chatId, bot, msg){
    bot.on('callback_query',  async (query) => {
        await bot.answerCallbackQuery(query.id)
        if(query.data === 'menus' ){
          return  setMenuBtns(bot, chatId, setMenuMessage(msg))
        }

        if(query.data === 'prices'){
           await bot.sendMediaGroup(chatId,[ {type: 'photo', media: 'imgs/photo1.jpg'}, {type: 'photo', media: 'imgs/photo2.jpg'}]);
            return setMenuClothesBtns(chatId, bot, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞')
        }
        return
    });
}

function setActualCursForClother(dictEl, textValue, chatId, bot){
    return setCurs(1).then((response)=>{
        currentAmount = +response
        return getBackupMenu(chatId, bot, `–í–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ ${textValue} –≤ –Æ–∞–Ω—å,
–∞ —è —Ä–∞—Å—Å—á–∏—Ç–∞—é –∫–æ–Ω–µ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
–ö—É—Ä—Å ¬• - ${response}` ).then(()=>{
    priceDict[dictEl] = true
    setTimeout(() => {
        isWaitForMessage = true
    }, 500);
})
    })
}

function setDefaultMessage(msg){
return `–ü—Ä–∏–≤–µ—Ç ${msg.from.first_name}!
    
–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É —Å–≤–æ–µ–≥–æ
–∑–∞–∫–∞–∑–∞ üí¥ 
            
–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ;)
${currentProfile}
–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤—Å–µ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã ü§î`
}

function setMenuMessage(msg){
return `${msg.from.first_name} , –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é`
}

function setPriceText(curs){
return `
–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç: 
   
–î–æ—Å—Ç–∞–≤–∫–∞ üöö –ø–æ –ö–∏—Ç–∞—é 
–î–æ—Å—Ç–∞–≤–∫–∞ –ö–∏—Ç–∞–π-–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É
–ö–æ–º–∏—Å—Å–∏—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ 
–ö—É—Ä—Å ¬• - ${curs}‚ÇΩ (–ö–£–†–° –ê–ö–¢–£–ê–õ–ï–ù –ù–ê –ú–û–ú–ï–ù–¢ –û–¢–ü–†–ê–í–õ–ï–ù–ò–Ø –í–ê–ú–ò –ó–ê–ü–†–û–°–ê, –ß–ï–†–ï–ó –î–ï–ù–¨ –û–ù –ú–û–ñ–ï–¢ –ò–ó–ú–ï–ù–ò–¢–¨–°–Ø)
   
–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É
–ï—Å–ª–∏ –≤—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ –±–æ–ª–µ–µ 2-—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑, —Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –±—É–¥–µ—Ç –∏–¥—Ç–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π 
   
üëü –û–±—É–≤—å: -500‚ÇΩ
üëñ–¢–æ–ª—Å—Ç–æ–≤–∫–∞/—à—Ç–∞–Ω—ã: -350‚ÇΩ
üëï/ü©≥–§—É—Ç–±–æ–ª–∫–∞/—à–æ—Ä—Ç—ã: -250‚ÇΩ
üß¶–ù–æ—Å–∫–∏/–Ω–∏–∂–Ω–µ–µ –±–µ–ª—å–µ: -150‚ÇΩ
   
‚ÄºÔ∏è–ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ 10-—Ç–∏ –ø–æ–∑–∏—Ü–∏–π —Å–∫–∏–¥–∫–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞‚ÄºÔ∏è
–£—Ç–æ—á–Ω—è–π—Ç–µ —Ç—É—Ç: ${currentProfile} `  
}

async function calculatePrice(chatId, bot, value){
    let firsProd = 0;
    let secondProd = 0;
    let result = Object.values(priceDict)?.findIndex((el)=> el === true);

        switch(result){
            case 0:
                firsProd = 1950;
                secondProd = 1460;
                break;
                case 1:
                    firsProd = 1800;
                    secondProd = 1030;
                    break;
                    case 2:
                        firsProd = 1400;
                        secondProd = 600;
                        break;
                case 3:
                    firsProd = 1250;
                    secondProd = 450;
                    break;
                }
                currentValue = (currentAmount * value + firsProd + secondProd);
    const procent =  (currentValue / 100) * 2;
    return setCurrenClothesBth(chatId, bot, `–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–∏: ${Math.floor(currentValue + procent)}
    ${setPriceText(currentAmount)}`)
}


async function startBot(){

    bot.on('message',  async (msg)=>{
        const text = msg.text;
        const chatId = msg.chat.id;
        
        if(text === '/start'){
            await bot.sendAnimation(chatId, 'imgs/hello.gif')
            return  setMenuBtns(bot, chatId, setDefaultMessage(msg))
        }
    
        if(msg.text.includes('–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å')){
            return getBackupMenu(chatId, bot, `–ü–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞ –ø—Ä–æ—á—Ç–∏—Ç–µ –¥–∞–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é: https://teletype.in/@takepoizon/howtobuy`)
        }

        if(msg.text.includes('–û—Ç–≤–µ—Ç—ã')){
            return getBackupMenu(chatId, bot, `
<a href='https://teletype.in/@takepoizon/loadandreg'>- –ö–∞–∫ —Å–∫–∞—á–∞—Ç—å –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ Poizon-Dewu?</a>

<a href='https://teletype.in/@takepoizon/howtobuy'>- –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–π –∞ —Ç–∞–∫–∂–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?</a>

<a href='https://teletype.in/@takepoizon/meanofbutton'>- –ö–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ—é—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞?</a>

<a href='https://teletype.in/@takepoizon/questionsdelivery'>- –í—Å–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ.</a>`)
        }
        if(msg.text.includes('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å')){
            await bot.sendMediaGroup(chatId,[ {type: 'photo', media: 'imgs/photo1.jpg'}, {type: 'photo', media: 'imgs/photo2.jpg'}]);
            return setMenuClothesBtns(chatId, bot, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞')
        }
        if(msg.text.includes('–°–≤—è–∑—å')){

            await setCurs(1).then((response)=>{
                currentAmount = +response
                        })
                        
            return getBackupMenu(chatId, bot, `–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: ${currentAmount} ¬• (–ö–£–†–° –ê–ö–¢–£–ê–õ–ï–ù –ù–ê
–ú–û–ú–ï–ù–¢ –û–¢–ü–†–ê–í–õ–ï–ù–ò–Ø –í–ê–ú–ò –ó–ê–ü–†–û–°–ê, –ß–ï–†–ï–ó –î–ï–ù–¨ –û–ù
–ú–û–ñ–ï–¢ –ò–ó–ú–ï–ù–ò–¢–¨–°–Ø)
–ú–µ–Ω–µ–¥–∂–µ—Ä: ${currentProfile}`)
        }
        if(msg.text.includes('–û—Ç–∑—ã–≤—ã')){
            return getBackupMenu(chatId, bot, `–û—Ç–∑—ã–≤—ã: @tpotzivi`)
        }
        if(msg.text.includes('–ê–∫—Ü–∏–∏')){
            return getBackupMenu(chatId, bot, `üíµ –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –≤—Ç–æ—Ä–æ–π –ø–æ–∑–∏—Ü–∏–∏ –∏–º–µ—é—Ç—Å—è —Å–∫–∏–¥–∫–∏:

üëü –û–±—É–≤—å: 500‚ÇΩ
üëñ–¢–æ–ª—Å—Ç–æ–≤–∫–∞/—à—Ç–∞–Ω—ã: 350‚ÇΩ
üëï/ü©≥–§—É—Ç–±–æ–ª–∫–∞/—à–æ—Ä—Ç—ã: 250‚ÇΩ
üß¶–ù–æ—Å–∫–∏/–Ω–∏–∂–Ω–µ–µ –±–µ–ª—å–µ: 150‚ÇΩ
            
–ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ 10-—Ç–∏ –ø–æ–∑–∏—Ü–∏–π —Å–∫–∏–¥–∫–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞‚ÄºÔ∏è
–£—Ç–æ—á–Ω—è–π—Ç–µ —Ç—É—Ç: ${currentProfile}`)
        }

        if(msg.text.includes('–ê–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã')){
            await bot.sendPhoto(chatId, 'imgs/abbr.jpg')
            return getBackupMenu(chatId, bot, `–í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤–µ—â–µ–π —Å
Poizon, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç–∫—Ä—ã—Ç—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ
–∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞–º, –∏–∑-–∑–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ü–µ–Ω–∞ –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É–∂–µ –º–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω–æ–π. –ö–∞–∂–¥–∞—è –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –Ω–∞
–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–≥–∏–æ–Ω.‚ò∫Ô∏è`)
        }

        if(msg.text.includes('–û–±—É–≤—å')){
            return setActualCursForClother(1,'üëü–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞', chatId, bot );
        }

        if(msg.text.includes('–¢–æ–ª—Å—Ç–æ–≤–∫–∏')){
            return setActualCursForClother(2,'üëñ–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã', chatId, bot );
        }

        if(msg.text.includes('–§—É—Ç–±–æ–ª–∫–∞')){
            return setActualCursForClother(3,'üëï–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã', chatId, bot );
        }

        if(msg.text.includes('–ù–æ—Å–∫–∏')){
            return setActualCursForClother(4,'üß¶–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ', chatId, bot );
        }

        if(msg.text?.includes('‚ôªÔ∏è–ú–µ–Ω—é')){
            return setMenuBtns(bot, chatId, setMenuMessage(msg))
        }

            const isNotNumber = isNaN(Number(msg.text))

            if(isWaitForMessage && !isNotNumber){
                await calculatePrice(chatId, bot, Number(msg.text))
                isWaitForMessage = false
            }
            if(isWaitForMessage && isNotNumber){
                return bot.sendMessage(chatId, `‚ùå–í–≤–æ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã` )
            }
               
             callbackQuery(chatId, bot, msg)

    })
}



startBot()





